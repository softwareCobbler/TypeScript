=== tests/cases/conformance/expressions/nullishCoalescingOperator/nullishCoalescingOperator13.ts ===
// Repro from #44988
type T =
>T : Symbol(T, Decl(nullishCoalescingOperator13.ts, 0, 0))

  | { a: string; b: string }
>a : Symbol(a, Decl(nullishCoalescingOperator13.ts, 2, 5))
>b : Symbol(b, Decl(nullishCoalescingOperator13.ts, 2, 16))

  | { a: string; b?: undefined }
>a : Symbol(a, Decl(nullishCoalescingOperator13.ts, 3, 5))
>b : Symbol(b, Decl(nullishCoalescingOperator13.ts, 3, 16))

  | { a?: undefined; b: string };
>a : Symbol(a, Decl(nullishCoalescingOperator13.ts, 4, 5))
>b : Symbol(b, Decl(nullishCoalescingOperator13.ts, 4, 20))

const getResult1 = (value1: string | undefined, value2: T): string => {
>getResult1 : Symbol(getResult1, Decl(nullishCoalescingOperator13.ts, 6, 5))
>value1 : Symbol(value1, Decl(nullishCoalescingOperator13.ts, 6, 20))
>value2 : Symbol(value2, Decl(nullishCoalescingOperator13.ts, 6, 47))
>T : Symbol(T, Decl(nullishCoalescingOperator13.ts, 0, 0))

  return value1 ?? value2.a ?? value2.b;
>value1 : Symbol(value1, Decl(nullishCoalescingOperator13.ts, 6, 20))
>value2.a : Symbol(a, Decl(nullishCoalescingOperator13.ts, 2, 5), Decl(nullishCoalescingOperator13.ts, 3, 5), Decl(nullishCoalescingOperator13.ts, 4, 5))
>value2 : Symbol(value2, Decl(nullishCoalescingOperator13.ts, 6, 47))
>a : Symbol(a, Decl(nullishCoalescingOperator13.ts, 2, 5), Decl(nullishCoalescingOperator13.ts, 3, 5), Decl(nullishCoalescingOperator13.ts, 4, 5))
>value2.b : Symbol(b, Decl(nullishCoalescingOperator13.ts, 4, 20))
>value2 : Symbol(value2, Decl(nullishCoalescingOperator13.ts, 6, 47))
>b : Symbol(b, Decl(nullishCoalescingOperator13.ts, 4, 20))

};

